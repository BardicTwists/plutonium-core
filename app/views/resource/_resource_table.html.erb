<%# locals: (collection:) -%>

<%
  resource_class = collection.resource_class
  resources = collection.records.to_a
  record_actions = collection.actions.collection_record_actions
  search_object = collection.search_object
  collection_actions = @collection.actions.collection_actions.permitted_for(current_policy)
-%>


  <%= render partial: "resource_table_toolbar", locals: {resource_class:, search_object:, actions: collection_actions} %>

  <% unless resources.any? %>
    <div class="col-12">
      <%=
        render_component :empty_card, message: "No #{resource_name_plural(resource_class).downcase} matching your query" do
          if current_policy.create?
            render_component :button, label: "Create #{resource_name(resource_class)}",
                                        to: resource_url_for(resource_class, action: :new),
                                        color: :primary
          end
        end
      %>
    </div>
  <% else %>
    <%= render_component :block, id: "resource-table", scroll: :x, data: {controller:"scroll-preserver", action: "scroll->scroll-preserver#scrolled"} do %>
        <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
          <thead class="text-xs text-gray-700 uppercase bg-gray-200 dark:bg-gray-700 dark:text-gray-400">
            <tr>
              <th scope="col" class="p-4">
                <div class="flex items-center">
                    <input id="checkbox-all-search" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                    <label for="checkbox-all-search" class="sr-only">checkbox</label>
                </div>
              </th>
              <th scope="col" class="px-6 py-3">
                <%= table_header :id, "#", search_object  %>
              </th>
              <% collection.fields.each do |name, field| %>
                <th scope="col" class="px-6 py-3">
                  <%= table_header name, field.label, search_object  %>
                </th>
              <% end %>
              <th scope="col" class="px-6 py-3 text-end">&nbsp;</th>
            </tr>
          </thead>
          <tbody>
            <% resources.each do |resource| %>
              <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                <td class="w-4 p-4">
                    <div class="flex items-center">
                        <input id="checkbox-table-search-1" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                        <label for="checkbox-table-search-1" class="sr-only">checkbox</label>
                    </div>
                </td>
                <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                  <% if policy(resource).show? %>
                    <%= link_to resource.to_param, resource_url_for(resource), class: "text-decoration-none" %>
                  <% else %>
                    <%= resource.to_param %>
                  <% end %>
                </th>
                <% collection.fields.each do |name, field| %>
                  <%
                    options = field.options
                    max_width = options.delete :pu_max_width
                  %>
                  <td class="px-6 py-4">
                    <%= field.render self, resource %>
                  </td>
                <% end %>
                <td class="flex justify-end px-6 py-4">
                  <%=
                  render partial: "resource_table_actions", locals: {
                    actions: record_actions.permitted_for(policy(resource)),
                    resource: resource
                  }
                %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
    <% end %>
    <% if collection.pager.present? %>
      <%= render_component :block, rounded: :bottom do %>
        <%= render_component :pagination, pager: collection.pager %>
      <% end  %>
    <% end  %>
  <% end %>
